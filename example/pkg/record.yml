name: example
functions:
  - name: record.random
    type: TASK
    provision:
      knative:
        image: ghcr.io/pawissanutt/oaas/json-update-fn-py
        requestsCpu: "0.5"
        requestsMemory: "256M"
        limitsCpu: "1"
        limitsMemory: "512M"
        port: 8080
        env:
          LOG_LEVEL: DEBUG
  #        targetConcurrency: 16
  #        scaleDownDelay: 30s

#  - name: record.merge
#    type: TASK
#    provision:
#      knative:
#        image: ghcr.io/pawissanutt/oaas/json-update-fn-py:latest
#        requestsCpu: "0.5"
#        requestsMemory: "256M"
#        limitsCpu: "1"
#        limitsMemory: "512M"
#        port: 8080

  - name: record.chain-update
    type: MACRO
    macro:
      # var record1 = $.json-update()
      # var record2 = record1.json-update()
      # var record3 = record2.json-update()
      # return record3
      steps:
        - target: $
          as: record1
          function: random
          args:
            INPLACE: "false"
        - target: record1
          as: record2
          function: random
          args:
            INPLACE: "false"
        - target: record2
          as: record3
          function: random
          args:
            INPLACE: "false"
      export: record3

classes:
  - name: record
    stateType: FILES
    objectType: SIMPLE
    stateSpec:
      keySpecs: []
    functions:
      - access: PUBLIC
        name: random-inplace
        function: .record.random
        outputCls: none
        defaultArgs:
          INPLACE: "true"
      - access: PUBLIC
        name: random
        function: .record.random
        outputCls: .record
        immutable: true
        defaultArgs:
          INPLACE: "false"
#      - access: PUBLIC
#        name: merge
#        function: .record.merge
#        outputCls: .record
#        defaultArgs:
#          INPLACE: "false"
#        forceImmutable: true
      - access: PUBLIC
        name: chain
        function: .record.chain-update
        outputCls: .record
      - access: PUBLIC
        name: new
        function: builtin.logical.new
        outputCls: .record
      - access: PUBLIC
        name: copy
        function: builtin.logical.copy
        outputCls: .record
