"%test":
  quarkus:
    console:
      color: true
    log:
      min-level: TRACE
  oprc:
    log: TRACE
    cm:
      orbitEnabled: false
      kafkaEnabled: false

"%dev":
  quarkus:
    console:
      color: true
    http:
      port: 8088
  oprc:
    log: DEBUG
    cm:
      orbitEnabled: false
      kafkaEnabled: false
  kafka:
    bootstrap:
      servers: localhost:31000


oprc:
  cm:
    clsProvisionTopic: oaas-cls
    kafkaEnabled: true
    fnProvisionTopic: oaas-fn
    orbitManagerHost: localhost
    orbitManagerPort: 8091
  log: INFO
  name: class-manager
  env: |
    OPRC_DB_PKG_HOST=localhost
    OPRC_DB_PKG_PORT=31235
    OPRC_DB_PKG_USER=root
    OPRC_DB_PKG_DB=oaas


quarkus:
  http:
    access-log:
      enabled: true
      pattern: '"%r" %s %b %{RESPONSE_TIME} ms'
      exclude-pattern: /q/.*
    record-request-start-time: true
  vertx:
    prefer-native-transport: true
  swagger-ui:
    always-include: true
  smallrye-openapi:
    store-schema-directory: ../doc/class-manager
    enable: true
  log:
    category:
      "org.hpcclab.oaas":
        level: ${oprc.log}
  container-image:
    image: ${ci.registry.image:oaas}/${oprc.name}${tag:}
  micrometer:
    export:
      json:
        enabled: true
        path: jsonmetrics
  native:
    resources:
      includes:
        - builtin/**
  kafka:
    devservices:
      enabled: false
  grpc:
    server:
      enable-reflection-service: true
      use-separate-server: false
    clients:
      orbit-manager:
        use-quarkus-grpc-client: true
        host: ${oprc.cm.orbitManagerHost}
        port: ${oprc.cm.orbitManagerPort}
mp:
  messaging:
    outgoing:
      fnProvisions:
        enabled: ${oprc.cm.kafkaEnabled}
        connector: smallrye-kafka
        topic: ${oprc.cm.fnProvisionTopic}
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
      clsProvisions:
        enabled: ${oprc.cm.kafkaEnabled}
        connector: smallrye-kafka
        topic: ${oprc.cm.clsProvisionTopic}
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
