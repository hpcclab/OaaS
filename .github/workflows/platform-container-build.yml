name: Platform Container Build

on:
  push:
    branches:
      - "**"
#    branches:
#      - 'dev'
#      - "features/**"
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      CONTAINER_PUSH: ${{ github.event_name != 'pull_request' && !startsWith(github.ref_name, 'dependabot')}}
      BASE_IMAGE: eclipse-temurin:21-jre
#      BASE_IMAGE: azul/zulu-openjdk:21-jre
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        cache: 'maven'

    - name: Set env (default)
      run: echo "RELEASE_VERSION=999-SNAPSHOT" >> $GITHUB_ENV
    - name: Set env
      if: startsWith(github.ref, 'refs/tags/')
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Set mvn version
      run: mvn versions:set -DnewVersion="${{ env.RELEASE_VERSION }}"
    - name: set container tag
      run: |
        if [[ $GITHUB_REF_NAME == 'main' ]]; then
          echo "TAG=:latest" >> "$GITHUB_ENV"
        else
          echo "TAG=:${GITHUB_REF##*/}" >> "$GITHUB_ENV"
        fi
        CI_REGISTRY_IMAGE=ghcr.io/$GITHUB_REPOSITORY
        echo "CI_REGISTRY_IMAGE=${CI_REGISTRY_IMAGE,,}" >> "$GITHUB_ENV"

    - name: Build and test project (platforms)
      run: mvn -B install

    - name: Build and push container image (platforms)
      if: env.CONTAINER_PUSH
      run: mvn -B -DskipTests package --file pom.xml -Dquarkus.container-image.username=${{ github.actor }} -Dquarkus.container-image.password=${{ secrets.GITHUB_TOKEN }} -Dquarkus.container-image.build=true -Dquarkus.container-image.push=true -Dquarkus.jib.base-jvm-image="${BASE_IMAGE}"

    - name: Build and test project (concat)
      working-directory: example/functions/concat-fn-java
      run: mvn -B package --file pom.xml

    - name: Build and push container image (concat)
      working-directory: example/functions/concat-fn-java
      run: mvn -B -DskipTests package --file pom.xml -Dquarkus.container-image.username=${{ github.actor }} -Dquarkus.container-image.password=${{ secrets.GITHUB_TOKEN }} -Dquarkus.container-image.build=true -Dquarkus.container-image.push=$CONTAINER_PUSH -Dquarkus.container-image.image="$CI_REGISTRY_IMAGE/concat-fn-java$TAG" -Dquarkus.jib.base-jvm-image="$BASE_IMAGE"

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        draft: true
        generate_release_notes: true
        files: |
          cli/target/oprc-cli-${{ env.RELEASE_VERSION }}-runner.jar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-cli:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'
      - name: Build project (platforms)
        run: mvn -B install -DskipTests
      - name: Build CLI native
        working-directory: cli
        run: mvn -B package -Pnative -DskipTests
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: cli-${{ matrix.os }}
          path: |
            cli/target/oprc-cli-*-runner*
            !cli/target/oprc-cli-*-runner.jar

